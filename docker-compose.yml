version: "3.8"

services:
  app:
    container_name: app
    build: ./
    ports:
      - 3000:3000
    env_file:
      - secrets.env
    depends_on:
      - nats
      - db
      - migrate
    networks:
      - app_network
    restart: on-failure

  db:
    image: postgres:15
    command: ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr"]
    ports:
      - 5432:5432
    container_name: postgres
    env_file:
      - secrets.env
    volumes:
      - database_postgres:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    build:
      context: .
      dockerfile: Dockerfile.migrate
    container_name: migrate
    command: ["up"]
    env_file:
      - secrets.env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app_network
    
  nats:
    image: nats
    expose:
      - 8222
    ports:
      - 4222:4222
      - 8222:8222
    command: ["-js", "--server_name", "test", "--http_port", "8222"]
    env_file:
      - secrets.env
    networks:
      - app_network

volumes:
  database_postgres:

networks:
  app_network:
    driver: bridge
